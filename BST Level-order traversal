import sys

class Node:
    def __init__(self,data):
        self.right= self.left =None
        self.data = data

class Solution:
    def insert(self, root, data):
        if root == None:
            return Node(data)
            else:
                if data<=root.data:
                    cur = self.insert(root.left, data)
                    root.left=cur
                else:
                    cur = self.insert(root.right, data)
                    root.right=cur
            return root
            
            def levelOrder(self,root):
                result, curr = [],[root]
                while curr:
                    next = []
                    for node in curr:
                        result += [node.data]
                        left, right = node.left, node.right
                        next += [left]*bool(left) + [right]* bool(right)
                    curr = next
                for _ in result : print _,
                
  T = int (raw_input())
  myTree= Solution()
  root = None
  for i in range(T):
      data = int(raw_input())
      root = myTree.insert(root,data)
  myTree.levelOrder(root)
